USE is a simple module system for gawk based on uses gawk/make by
tim@menzies.us (http://menzies.us).

For an example of this working, see tests/eg/2.awk and tests/eg/3.

Modules to include are denoted with a 

#use "file name"

Note that "file name" will be included before including the file
containing the above "#use".

Such a module system is useful, for two reasons.

1) In the case of nested dependencies, it can become tricky to
   remember them all

2) In the case of linear dependencies that have an ordering
   (e.g. BEGIN{ foo()} must be called before BEGIN {bar()} is called),
   it is possible to miss that ordering unless it is
   somehow pre-determined and cached.

By default, USE assumes that there is a file main.awk that is your top
level driver of everything else. This can be changed using

      make it=otherName 

i.e. you main file is otherName.awk.

The main call is

      make args="..."

that finds all the included files "f1" "f2" then runs

     gawk -f f1 -f f2 -f main.awk args

A call to

       make profile args="..."

will do the run and print out that profile.out report showing how many
times lines were called (this is handy for checking for dead code or
functions that are candidates for optimization). By default, this
profile is written to $HOME/tmp/profile.out. You can change this
default by

       make tmp=dir profile args="..."

A call to

       make build

will combine all the files into one file and adds the #!`which gawk`
-f shebang string at the top of the file.  Note: i find "build" very
useful for shipping one file to a client. By default, it writes a file
called "main" main but you can change that using

      make it=otherName build

Finally, if you want to use another interpreter or use this inside
some funky script, you can just use (e.g.)

      nawk `make what`

and this wil expand to
  
      nawk -f f1 -f f2 etc